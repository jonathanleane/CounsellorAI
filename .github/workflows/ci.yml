name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Install server dependencies
      run: cd server && npm install
    
    - name: Install client dependencies  
      run: cd client && npm install
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Allow to continue if linting fails
    
    - name: Type check
      run: npm run typecheck
      continue-on-error: true  # Allow to continue if type checking fails
    
    - name: Build server
      run: npm run build:server
    
    - name: Build client
      run: npm run build:client
      env:
        CI: false  # Disable treating warnings as errors in React build
    
    - name: Run server tests
      run: npm run test:server
      continue-on-error: true  # Tests might not be implemented yet
      env:
        NODE_ENV: test
    
    - name: Run client tests
      run: npm run test:client -- --passWithNoTests
      continue-on-error: true  # Tests might not be implemented yet
      env:
        NODE_ENV: test
        CI: true
    
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for proper secret scanning
    
    - name: Install dependencies
      run: npm install
    
    - name: Run security audit
      run: |
        npm audit --production || true
        cd server && npm audit --production || true
        cd ../client && npm audit --production || true
      continue-on-error: true  # Don't fail on vulnerabilities
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.before }}
        head: ${{ github.event.after }}
      if: github.event_name == 'push'
    
    - name: Check for secrets in PR
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.pull_request.base.sha }}
        head: ${{ github.event.pull_request.head.sha }}
      if: github.event_name == 'pull_request'
    
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t counsellor-ai:test .
      if: false # Enable when Dockerfile is added